fn main(
    hashed_message: [u8; 32],
    pub_key_x: [u8; 32],
    pub_key_y: [u8; 32],
    signature: [u8; 64],
) {
    let valid = std::ecdsa_secp256r1::verify_signature(
        pub_key_x,
        pub_key_y,
        signature,
        hashed_message
    );
    assert(valid);
}

#[test]
fn test_main() {

    let pub_key_x = [
    249,
    174,
    213,
    107,
    66,
    216,
    117,
    224,
    161,
    133,
    41,
    125,
    224,
    112,
    205,
    227,
    35,
    178,
    65,
    27,
    131,
    46,
    43,
    149,
    81,
    20,
    57,
    123,
    0,
    95,
    148,
    26,
];
let pub_key_y = [
    21,
    116,
    105,
    78,
    32,
    59,
    202,
    83,
    76,
    184,
    194,
    71,
    54,
    198,
    198,
    140,
    2,
    214,
    138,
    52,
    169,
    255,
    134,
    120,
    245,
    104,
    223,
    67,
    4,
    12,
    61,
    255,
];
let signature = [
    203,
    102,
    126,
    108,
    164,
    137,
    167,
    47,
    97,
    6,
    224,
    233,
    113,
    249,
    251,
    131,
    254,
    104,
    156,
    201,
    243,
    74,
    105,
    88,
    5,
    12,
    99,
    220,
    7,
    104,
    76,
    158,
    92,
    242,
    173,
    39,
    148,
    64,
    98,
    48,
    157,
    40,
    233,
    179,
    83,
    188,
    201,
    68,
    44,
    232,
    159,
    232,
    84,
    74,
    221,
    13,
    170,
    178,
    250,
    237,
    236,
    202,
    48,
    109,
];
let hashed_message = [
    223,
    253,
    96,
    33,
    187,
    43,
    213,
    176,
    175,
    103,
    98,
    144,
    128,
    158,
    195,
    165,
    49,
    145,
    221,
    129,
    199,
    247,
    10,
    75,
    40,
    104,
    138,
    54,
    33,
    130,
    152,
    111,
];

    main(hashed_message, pub_key_x, pub_key_y, signature);
}
